#!/bin/sh
set -e

generate_ninja () {
  /bin/echo -n > build.ninja
  
cat << EOF >> build.ninja
rule cc
  command = $CC -c \$in -O2 $(sdl2-config --cflags) -MD -MF \$out.d -o \$out
  depfile = \$out.d
  description = Compiling C object \$out

rule ld
  command = $CC \$in -s $(sdl2-config --libs) -o \$out
  description = Linking executable \$out

rule convert
  command = convert \$in -depth 1 -negate gray:\$out
  description = Converting to raw binary \$out

rule cc_bin2h
  command = $CC \$in -s -O2 -MD -MF \$out.d -o \$out
  depfile = \$out.d
  description = Compiling executable \$out

rule bin2h
  command = build/bin2h < \$in > \$out
  description = Converting to C file \$out

build build/bin2h: cc_bin2h src/bin2h/bin2h.c
build build/font.bin: convert 3rdparty/font.png
build build/font.c: bin2h build/font.bin | build/bin2h
build build/font.o: cc build/font.c
EOF
  
  cd src
  files=$(echo *.c)
  cd ..
  
  objects=
  
  for file in $files; do
    object="build/$(echo $file | sed "s/\\.c$/.o/")"
    objects="$objects$object "
    
    echo "build $object: cc src/$file" >> build.ninja
  done
  
  echo "build bin/msed: ld ${objects}build/font.o" >> build.ninja
  
  echo "default bin/msed" >> build.ninja
}

CC=${CC:-gcc}
generate_ninja
